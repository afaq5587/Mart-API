version: "3.9"
name: Mart-API
services:
  #? Service 1: (User Service):
  user:
    image: user-api
    build:
      context: ./user-service
    container_name: user-service
    volumes:
      - ./user-service:/code
    ports:
      - "8000:8000"
    depends_on:
      - user_postgres_db
      - broker1
      # - broker2
      # - broker3

  #? (User Service Database):
  user_postgres_db:
    image: postgres:latest
    restart: always
    container_name: user-postgres
    environment:
      - POSTGRES_USER=user_postgres
      - POSTGRES_PASSWORD=user_postgres_password
      - POSTGRES_DB=user_postgres_db
    ports:
      - "5433:5432"
    volumes:
      - user_postgres_db:/var/lib/postgresql/data

  #? Initialize kafka brokers in kafka cluster:
   # Initialize kafka broker 1
  broker1:
    image: apache/kafka:3.7.0
    hostname: broker1
    container_name: broker1
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://broker1:9092,PLAINTEXT://broker1:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker1:29093,2@broker2:29093,3@broker3:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  #? Initialize kafka broker 2:
  # broker2:
  #   image: apache/kafka:3.7.0
  #   hostname: broker2
  #   container_name: broker2
  #   ports:
  #     - "9093:9093"
  #   environment:
  #     KAFKA_NODE_ID: 2
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://broker2:9092,PLAINTEXT://broker2:19092"
  #     KAFKA_PROCESS_ROLES: "broker,controller"
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker1:29093,2@broker2:29093,3@broker3:29093"
  #     KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
  #     KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  #     KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  #     CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  #     KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  #? Initialize kafka broker 2:
  # broker3:
  #   image: apache/kafka:3.7.0
  #   hostname: broker3
  #   container_name: broker3
  #   ports:
  #     - "9094:9094"
  #   environment:
  #     KAFKA_NODE_ID: 3
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://broker3:9092,PLAINTEXT://broker3:19092"
  #     KAFKA_PROCESS_ROLES: "broker,controller"
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker1:29093,2@broker2:29093,3@broker3:29093"
  #     KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
  #     KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  #     KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  #     CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  #     KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  #? Initialize kafka-ui for kafka cluster and brokers:
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Mart-API Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker1:19092,broker2:19092,broker3:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker1
      # - broker2
      # - broker3

  #? Schema Registry Service: We will use the Confluent Schema Registry image in Next Step
  schema-registry:
    image: confluentinc/cp-schema-registry:6.1.1
    container_name: schema-registry
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:19092,broker2:19092,broker3:19092'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - "8081:8081"
    depends_on:
      - broker1
      # - broker2
      # - broker3

  #? Init Kafka Service
  # init-kafka:
  #   build:
  #     context: ./init/kafka/
  #   depends_on:
  #     - broker
  #   environment:
  #     KAFKA_HOST: broker
  #     KAFKA_PORT: 9092
  #     KAFKA_CREATE_TOPICS: "table-update:1:1,error:1:1,ms-order-inbox-topic:1:1,ms-order-inbox-error-topic:1:1,ms-order-outbox-topic:1:1"

#? Initialize volumes for microservices:
volumes:
  user_postgres_db:
    driver: local

#? Initialize bridge network for microservices:
networks:
  default:
    driver: bridge
  mart-net:
    driver: bridge
